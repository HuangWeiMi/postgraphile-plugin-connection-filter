// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`computedColumns.graphql 1`] = `
Object {
  "data": Object {
    "allFilterables_computedSetofChild_name_equalTo_child2": Object {
      "nodes": Array [
        Object {
          "computedSetofChild": Object {
            "nodes": Array [
              Object {
                "id": 2,
              },
            ],
          },
          "id": 1,
        },
        Object {
          "computedSetofChild": Object {
            "nodes": Array [],
          },
          "id": 2,
        },
        Object {
          "computedSetofChild": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "computedSetofChild": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "computedSetofChild": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "computedIntArray_equalTo_2_20": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "computedIntArray_equalTo_empty": Object {
      "nodes": Array [],
    },
    "computed_equalTo_test_computed": Object {
      "nodes": Array [
        Object {
          "id": 4,
        },
      ],
    },
    "filterableById_1_computedSetofChild_name_equalTo_child2": Object {
      "computedSetofChild": Object {
        "nodes": Array [
          Object {
            "id": 2,
          },
        ],
      },
      "id": 1,
    },
  },
}
`;

exports[`dynamicJson.graphql 1`] = `
Object {
  "data": Object {
    "a": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "b": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "c": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "d": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
  },
}
`;

exports[`logicalOperators.graphql 1`] = `
Object {
  "data": Object {
    "int4_equalTo_2_and_text_endsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "int4_equalTo_2_or_text_endsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "not_int4_equalTo_2_or_text_endsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "not_text_equalTo_test": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
      ],
    },
  },
}
`;

exports[`nullAndEmptyAllowed.graphql 1`] = `
Object {
  "data": Object {
    "a": Object {
      "totalCount": 5,
    },
    "b": Object {
      "totalCount": 5,
    },
    "c": Object {
      "totalCount": 5,
    },
    "d": Object {
      "totalCount": 5,
    },
    "e": Object {
      "totalCount": 5,
    },
    "f": Object {
      "totalCount": 5,
    },
    "g": Object {
      "totalCount": 5,
    },
    "h": Object {
      "totalCount": 5,
    },
    "i": Object {
      "totalCount": 5,
    },
    "j": Object {
      "totalCount": 5,
    },
    "k": Object {
      "totalCount": 5,
    },
    "l": Object {
      "totalCount": 5,
    },
    "m": Object {
      "totalCount": 5,
    },
    "n": Object {
      "totalCount": 5,
    },
    "o": Object {
      "totalCount": 5,
    },
    "p": Object {
      "totalCount": 5,
    },
    "q": Object {
      "totalCount": 5,
    },
    "r": Object {
      "totalCount": 5,
    },
    "s": Object {
      "totalCount": 5,
    },
    "t": Object {
      "totalCount": 5,
    },
  },
}
`;

exports[`nullAndEmptyForbidden.graphql 1`] = `
Object {
  "data": Object {
    "a": null,
    "b": null,
    "c": null,
    "d": null,
    "e": null,
    "f": null,
    "g": null,
    "h": null,
    "i": null,
    "j": null,
    "k": null,
    "l": null,
    "m": null,
    "n": null,
    "o": null,
    "p": null,
    "q": null,
    "r": null,
    "s": null,
    "t": null,
  },
  "errors": Array [
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
  ],
}
`;

exports[`relations.graphql 1`] = `
Object {
  "data": Object {
    "backwardCompound_name_equalTo_backwardCompound12": Object {
      "nodes": Array [
        Object {
          "id": 2,
          "text": "Test",
        },
      ],
    },
    "backward_name_equalTo_backward2": Object {
      "nodes": Array [
        Object {
          "id": 2,
          "text": "Test",
        },
      ],
    },
    "children_every_name_equalTo_child2": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "children_every_name_startsWith_c": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 1,
                "name": "child1",
              },
              Object {
                "id": 2,
                "name": "child2",
              },
            ],
          },
          "id": 1,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 3,
                "name": "child3",
              },
              Object {
                "id": 4,
                "name": "child4",
              },
            ],
          },
          "id": 2,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "children_every_name_startsWith_c_and_exist_false": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "children_every_name_startsWith_c_and_exist_true": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 1,
                "name": "child1",
              },
              Object {
                "id": 2,
                "name": "child2",
              },
            ],
          },
          "id": 1,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 3,
                "name": "child3",
              },
              Object {
                "id": 4,
                "name": "child4",
              },
            ],
          },
          "id": 2,
        },
      ],
    },
    "children_exist_false": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "children_exist_true": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 1,
                "name": "child1",
              },
              Object {
                "id": 2,
                "name": "child2",
              },
            ],
          },
          "id": 1,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 3,
                "name": "child3",
              },
              Object {
                "id": 4,
                "name": "child4",
              },
            ],
          },
          "id": 2,
        },
      ],
    },
    "children_none_name_equalTo_child2": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 3,
                "name": "child3",
              },
              Object {
                "id": 4,
                "name": "child4",
              },
            ],
          },
          "id": 2,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "children_none_name_startsWith_c": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "children_none_name_startsWith_c_and_exist_false": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 3,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 4,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [],
          },
          "id": 5,
        },
      ],
    },
    "children_none_name_startsWith_c_and_exist_true": Object {
      "nodes": Array [],
    },
    "children_some_name_equalTo_child2": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 1,
                "name": "child1",
              },
              Object {
                "id": 2,
                "name": "child2",
              },
            ],
          },
          "id": 1,
        },
      ],
    },
    "children_some_name_startsWith_c": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 1,
                "name": "child1",
              },
              Object {
                "id": 2,
                "name": "child2",
              },
            ],
          },
          "id": 1,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 3,
                "name": "child3",
              },
              Object {
                "id": 4,
                "name": "child4",
              },
            ],
          },
          "id": 2,
        },
      ],
    },
    "children_some_name_startsWith_c_and_exist_false": Object {
      "nodes": Array [],
    },
    "children_some_name_startsWith_c_and_exist_true": Object {
      "nodes": Array [
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 1,
                "name": "child1",
              },
              Object {
                "id": 2,
                "name": "child2",
              },
            ],
          },
          "id": 1,
        },
        Object {
          "childrenByFilterableId": Object {
            "nodes": Array [
              Object {
                "id": 3,
                "name": "child3",
              },
              Object {
                "id": 4,
                "name": "child4",
              },
            ],
          },
          "id": 2,
        },
      ],
    },
    "forwardCompound_name_equalTo_forwardCompound12": Object {
      "nodes": Array [
        Object {
          "id": 2,
          "text": "Test",
        },
      ],
    },
    "forward_name_equalTo_forward2": Object {
      "nodes": Array [
        Object {
          "id": 2,
          "text": "Test",
        },
      ],
    },
    "parent_name_equalTo_parent2": Object {
      "nodes": Array [
        Object {
          "id": 3,
          "text": "tEST",
        },
        Object {
          "id": 4,
          "text": "test",
        },
      ],
    },
    "x_backward_empty": null,
    "x_backward_name_empty": null,
    "x_backward_name_equalTo_null": null,
    "x_backward_name_null": null,
    "x_backward_null": null,
    "x_children_empty": null,
    "x_children_every_empty": null,
    "x_children_every_name_empty": null,
    "x_children_every_name_equalTo_null": null,
    "x_children_every_name_null": null,
    "x_children_every_null": null,
    "x_children_exist_null": null,
    "x_children_null": null,
    "x_forward_empty": null,
    "x_forward_name_empty": null,
    "x_forward_name_equalTo_null": null,
    "x_forward_name_null": null,
    "x_forward_null": null,
    "x_parent_empty": null,
    "x_parent_name_empty": null,
    "x_parent_name_equalTo_null": null,
    "x_parent_name_null": null,
    "x_parent_null": null,
  },
  "errors": Array [
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
    [GraphQLError: Null literals are forbidden in filter argument input.],
    [GraphQLError: Empty objects are forbidden in filter argument input.],
  ],
}
`;

exports[`setofFunctions.graphql 1`] = `
Object {
  "data": Object {
    "funcReturnsTableMultiCol_col2_equalTo_out2": Object {
      "nodes": Array [
        Object {
          "col2": "out2",
        },
      ],
    },
    "funcReturnsTableOneCol_0_equalTo_43": Object {
      "nodes": Array [
        43,
      ],
    },
  },
}
`;

exports[`simpleCollections.graphql 1`] = `
Object {
  "data": Object {
    "text_isNull_true": Array [
      Object {
        "id": 5,
        "text": null,
      },
    ],
  },
}
`;

exports[`types.bool.graphql 1`] = `
Object {
  "data": Object {
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.char4.graphql 1`] = `
Object {
  "data": Object {
    "containsInsensitive_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "contains_t": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "distinctFrom_test": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "endsWithInsensitive_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "endsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "equalTo_test": Object {
      "nodes": Array [
        Object {
          "id": 4,
        },
      ],
    },
    "isNull_false": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "isNull_true": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "likeInsensitive_es": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "like_es": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notContainsInsensitive_t": Object {
      "nodes": Array [],
    },
    "notContains_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "notDistinctFrom_test": Object {
      "nodes": Array [
        Object {
          "id": 4,
        },
      ],
    },
    "notEndsWithInsensitive_t": Object {
      "nodes": Array [],
    },
    "notEndsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notEqualTo_test": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notLikeInsensitive_es": Object {
      "nodes": Array [],
    },
    "notLike_es": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notSimilarTo_te_or_st": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notStartsWithInsensitive_t": Object {
      "nodes": Array [],
    },
    "notStartsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "similarTo_te_or_st": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "startsWithInsensitive_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "startsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.dateRange.graphql 1`] = `
Object {
  "data": Object {
    "adjacentTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "containsElement": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsRightOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "overlaps": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "strictlyLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "strictlyRightOf": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.enum.graphql 1`] = `
Object {
  "data": Object {
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.inet.graphql 1`] = `
Object {
  "data": Object {
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 1,
          "inet": "192.168.0.1",
        },
      ],
    },
    "containedByOrEqualTo_ContainedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
          "inet": "192.168.1.1",
        },
      ],
    },
    "containedByOrEqualTo_EqualTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
          "inet": "192.168.1.1",
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 3,
          "inet": "10.0.0.0/24",
        },
      ],
    },
    "containsOrContainedBy_ContainedBy": Object {
      "nodes": Array [
        Object {
          "id": 3,
          "inet": "10.0.0.0/24",
        },
      ],
    },
    "containsOrContainedBy_Contains": Object {
      "nodes": Array [
        Object {
          "id": 4,
          "inet": "172.168.1.1",
        },
      ],
    },
    "containsOrEqualTo_Contains": Object {
      "nodes": Array [
        Object {
          "id": 3,
          "inet": "10.0.0.0/24",
        },
      ],
    },
    "containsOrEqualTo_EqualTo": Object {
      "nodes": Array [
        Object {
          "id": 3,
          "inet": "10.0.0.0/24",
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.int4.graphql 1`] = `
Object {
  "data": Object {
    "int4_greaterThanOrEqualTo_2": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4_greaterThan_2": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4_in_2_3": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "int4_in_empty": Object {
      "nodes": Array [],
    },
    "int4_lessThanOrEqualTo_2": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "int4_lessThan_2": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "int4_notIn_2_3": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4_notIn_empty": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
  },
}
`;

exports[`types.int4Array.graphql 1`] = `
Object {
  "data": Object {
    "int4Array_anyEqualTo_2": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_anyGreaterThanOrEqualTo_2": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_anyGreaterThan_2": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_anyLessThanOrEqualTo_2": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_anyLessThan_2": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "int4Array_anyNotEqualTo_2": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_containedBy_2": Object {
      "nodes": Array [],
    },
    "int4Array_containedBy_2_3_20": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_containedBy_empty": Object {
      "nodes": Array [],
    },
    "int4Array_contains_2": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_contains_2_3_20": Object {
      "nodes": Array [],
    },
    "int4Array_contains_empty": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_distinctFrom_2_20": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "int4Array_distinctFrom_empty": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "int4Array_equalTo_2_20": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_equalTo_empty": Object {
      "nodes": Array [],
    },
    "int4Array_greaterThanOrEqualTo_2_20": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_greaterThanOrEqualTo_empty": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_greaterThan_2_20": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_greaterThan_empty": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_isNull_false": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_isNull_true": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "int4Array_lessThanOrEqualTo_2_20": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_lessThanOrEqualTo_empty": Object {
      "nodes": Array [],
    },
    "int4Array_lessThan_2_20": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "int4Array_lessThan_empty": Object {
      "nodes": Array [],
    },
    "int4Array_notDistinctFrom_2_20": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_notDistinctFrom_empty": Object {
      "nodes": Array [],
    },
    "int4Array_notEqualTo_2_20": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_notEqualTo_empty": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "int4Array_overlaps_2": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "int4Array_overlaps_2_3_20": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "int4Array_overlaps_empty": Object {
      "nodes": Array [],
    },
  },
}
`;

exports[`types.int4Range.graphql 1`] = `
Object {
  "data": Object {
    "adjacentTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "containsElement": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsRightOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "overlaps": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "strictlyLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "strictlyRightOf": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.int8Range.graphql 1`] = `
Object {
  "data": Object {
    "adjacentTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "containsElement": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsRightOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "overlaps": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "strictlyLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "strictlyRightOf": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.jsonb.graphql 1`] = `
Object {
  "data": Object {
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.numericRange.graphql 1`] = `
Object {
  "data": Object {
    "adjacentTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "containsElement": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsRightOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "overlaps": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "strictlyLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "strictlyRightOf": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.text.graphql 1`] = `
Object {
  "data": Object {
    "containsInsensitive_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "contains_t": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "distinctFrom_test": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "endsWithInsensitive_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "endsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "equalTo_test": Object {
      "nodes": Array [
        Object {
          "id": 4,
        },
      ],
    },
    "isNull_false": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "isNull_true": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "likeInsensitive_es": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "like_es": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notContainsInsensitive_t": Object {
      "nodes": Array [],
    },
    "notContains_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "notDistinctFrom_test": Object {
      "nodes": Array [
        Object {
          "id": 4,
        },
      ],
    },
    "notEndsWithInsensitive_t": Object {
      "nodes": Array [],
    },
    "notEndsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notEqualTo_test": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notLikeInsensitive_es": Object {
      "nodes": Array [],
    },
    "notLike_es": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notSimilarTo_te_or_st": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "notStartsWithInsensitive_t": Object {
      "nodes": Array [],
    },
    "notStartsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "similarTo_te_or_st": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "startsWithInsensitive_t": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "startsWith_t": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.timestampRange.graphql 1`] = `
Object {
  "data": Object {
    "adjacentTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "containsElement": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsRightOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "overlaps": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "strictlyLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "strictlyRightOf": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;

exports[`types.timestamptzRange.graphql 1`] = `
Object {
  "data": Object {
    "adjacentTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
      ],
    },
    "containedBy": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "contains": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "containsElement": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "distinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
        Object {
          "id": 5,
        },
      ],
    },
    "equalTo": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "in": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "isNull": Object {
      "nodes": Array [
        Object {
          "id": 5,
        },
      ],
    },
    "notDistinctFrom": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "notEqualTo": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "notExtendsRightOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ],
    },
    "notIn": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "overlaps": Object {
      "nodes": Array [
        Object {
          "id": 2,
        },
      ],
    },
    "strictlyLeftOf": Object {
      "nodes": Array [
        Object {
          "id": 1,
        },
      ],
    },
    "strictlyRightOf": Object {
      "nodes": Array [
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
  },
}
`;
